name: Build and deploy Python app to Azure Web App - my-ai-assistant

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: my-ai-assistant
  PYTHON_VERSION: '3.12'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect static files and prepare for deployment
        run: |
          source venv/bin/activate
          # Create any necessary directories
          mkdir -p static
          # Run any build processes if needed
          echo "Build completed successfully"

      - name: Create deployment package
        run: |
          # Remove unnecessary files for deployment
          rm -rf venv/
          rm -rf .git/
          rm -rf __pycache__/
          find . -name "*.pyc" -delete
          find . -name "*.pyo" -delete
          find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/
            !.git/
            !__pycache__/
            !.env
            !.pytest_cache/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_ADCAAAF23C0041F0AFD89BC400EF5F5B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C38E7AB3151340AEBCBB3054F5396E5B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E86275723B4347F19140A20AE28F011B }}

      - name: Configure Azure Web App settings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          app-settings-json: |
            [
              {
                "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                "value": "true"
              },
              {
                "name": "POST_BUILD_SCRIPT_PATH",
                "value": ""
              },
              {
                "name": "WEBSITE_WEBDEPLOY_USE_SCM",
                "value": "true"
              }
            ]

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          package: .
          startup-file: 'startup.sh'

      - name: Health Check
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30
          curl -f ${{ steps.deploy-to-webapp.outputs.webapp-url }}/health || echo "Health check endpoint not available yet"
